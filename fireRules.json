{
  "rules": {
    ".read": "true",
    ".write": "true",
    "contacts": {
        "$contact": {
                "name": {
                    ".validate": "newData.isString() && newData.val().length < 48 && newData.val().length >= 2"
                },
                "email": {
                    ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i)"
                },
                "address": {
                  ".validate": "newData.isString() && newData.val().length < 50"
                },
								"business": {
                  ".validate": "newData.isString() && (newData.val().contains('Processor') || newData.val().contains('Fisher') || newData.val().contains('Fish Monger') || newData.val().contains('Distributor'))"
                },
                "province": {
                  ".validate": "newData.isString() && (newData.val().contains('NS') || newData.val().contains('AB') || newData.val().contains('BC') || newData.val().contains('NB') || newData.val().contains('NL') || newData.val().contains('PE') || newData.val().contains('QC') || newData.val().contains('ON') || newData.val().contains('SK') || newData.val().contains('MB') || newData.val().contains('NT') || newData.val().contains('NU') || newData.val().contains('YK'))"
                },
                "businessNumber": {
                  ".validate": "newData.isString() && newData.val().length == 9 && newData.val().matches(/^[0-9]{9}$/i)"
                }
          			
            }
        }
  	}
}